{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service to deploy that the Rule Execution Service will be installed on"
      }
    },
    "sfLoginUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Login URL for the Salesforce instance used with the integration framework, ex: 'https://login.salesforce.com/services/oauth2/token'"
      }
    },
    "sfUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Login username to connect to your Salesforce Account"
      }
    },
    "sfPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Login password to connect to your Salesforce Account"
      }
    },
    "sfSecurityToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "API token for the Salesforce service account"
      }
    },
    "sfConsumerKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OAuth consumer key for the connected app"
      }
    },
    "sfConsumerSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "OAuth consumer secret for the connected app"
      }
    },
    "catalogUri": {
      "type": "string",
      "metadata": {
        "description": "URI for your InRule Rule Catalog service, should follow this format: https://{Context}/Service.svc, with {Context} being replaced with the base catalog service URI."
      }
    },
    "catalogUser": {
      "type": "string",
      "metadata": {
        "description": "Login username to connect to your InRule Rule Catalog"
      }
    },
    "catalogPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Login password to connect to your InRule Rule Catalog"
      }
    },
    "ruleAppLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optionally supply a default label used by the execution service to identify the ruleapp version to run. It is recommended to use a label such as \"LIVE\" to denote a production-ready rule application"
      }
    },
    "executionServiceBasicUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Username used to secure the rule service. This same username will need to be provided to Salesforce during configuration"
      }
    },
    "executionServiceBasicPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password used to secure the rule service. This same password will need to be provided to Salesforce during configuration"
      }
    },
    "createOrUpdateAppServicePlan": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to false, provide the name and resource group of an existing service plan in the 'appServicePlanName' and 'servicePlanResourceGroupName' parameters. Otherwise a new plan will be created with the supplied name"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('appServiceName'),'Plan')]",
      "metadata": {
        "description": "Defines the App Service Plan's name, defaulting to the value of the App Service's name with 'Plan' appended to the end"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "servicePlanResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Optional name of the resource group for the existing app service plan. If creating a new plan, leave as the default value"
      }
    },
    "inRuleVersion": {
      "type": "string",
      "defaultValue": "5.7.3",
      "metadata": {
        "description": "Defines what version of the InRule Execution Service to deploy"
      }
    },
    "createOrUpdateAppInsightsResource": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "(Deprecated, now conditionally triggered based on appInsightsInstrumentationKey) If set to true, provide a value for the appInsightsResourceName parameter. If set to false, you can provide a value for the appInsightsIntrumentationKey to associate your App Service with an existing App Insights resource"
      }
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Provide an Instrumentation Key if you have an existing App Insights resource you'd like to use for logging and telemetry. If you are configuring this in a nonstandard azure environment, please additionally provide an App Insights Connection String. Otherwise, leave this value blank and provide a value for the 'appInsightsResourceName' parameter, which will create the resource for you"
      }
    },
    "appInsightsConnectionString": {
      "type": "string",
      "defaultValue": "[concat('InstrumentationKey=', parameters('appInsightsInstrumentationKey'), ';')]",
      "metadata": {
        "description": "Only override the default value here if you have an existing App Insights resource you'd like to use, AND you need to use a non-standard connection string. If you need to supply your own connection string, be sure to set that value here, as well as providing your instrumentation key in the appInsightsInstrumentationKey parameter. If you want this template to manage the App Insights resource for you, or only need to provide an instrumentation key, leave this value as the default and provide values for appInsightsResourceName or appInsightsInstrumentationKey instead"
      }
    },
    "appInsightsResourceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('appServiceName'),'AppInsights')]",
      "metadata": {
        "description": "Provide a name if you do not have an existing App Insights resource you'd like to use for logging and telemetry. Setting this value will create a new App Insights resource with the provided name. This defaults to appending 'AppInsights' to the App Service resource name, but you can provide your own name. If you have an existing resource you'd like to use, leave this value blank and provide one for the 'appInsightsInstrumentationKey' parameter"
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Defines what Azure region to deploy the Application Insights resource to. Check details at https://azure.microsoft.com/en-us/global-infrastructure/services/?products=monitor"
      }
    },
    "appConfigurationServiceConnectionString": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SaaS Only: Provide a connection string for a azure app configuration resource to pull app configuration settings from."
      }
    },
    "appConfigurationServiceLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SaaS Only: Provide a label for the group of app settings to pull from your azure app configuration resource"
      }
    },
    "packageUri": {
      "type": "string",
      "defaultValue": "[concat('https://github.com/InRule/AzureAppServices/releases/download/v', parameters('inRuleVersion'),'/InRule.Salesforce.WebService.zip')]",
      "metadata": {
        "description": "Download URI for the Execution Service package. Calculated from the inRuleVersion parameter."
      }
    },
     "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional for resources. By default the location of the resource group will be used"
      }
    }
  },
  "variables": {
    "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(parameters('appServiceName'),'Plan'), parameters('appServicePlanName'))]",
    "appInsightsResourceName": "[if(empty(parameters('appInsightsResourceName')), concat(parameters('appServiceName'),'Insights'), parameters('appInsightsResourceName'))]",
    "appInsightsLocation": "[if(empty(parameters('appInsightsLocation')), parameters('location'), parameters('appInsightsLocation'))]",
    "baseAppSettings": {
      "inrule:sf:catalog:label": "[parameters('ruleAppLabel')]",
      "inrule:sf:catalog:user": "[parameters('catalogUser')]",
      "inrule:sf:catalog:password": "[parameters('catalogPassword')]",
      "inrule:sf:catalog:sso": "false",
      "inrule:sf:catalog:uri": "[parameters('catalogUri')]",
      "inrule:sf:catalog:ruleAppDirectory": "C:\\RuleApps",
      "inrule:sf:catalog:useInRuleCatalog": "true",
      "inrule:repository:licensing:licenseFolder": "D:\\home\\site\\wwwroot",
      "inrule:logging:level": "Warn"
    },
    "selfDeployAppSettings": {
      "inrule:sf:api:loginUrl": "[parameters('sfLoginUrl')]",
      "inrule:sf:api:username": "[parameters('sfUsername')]",
      "inrule:sf:api:password": "[parameters('sfPassword')]",
      "inrule:sf:api:securityToken": "[parameters('sfSecurityToken')]",
      "inrule:sf:api:consumerKey": "[parameters('sfConsumerKey')]",
      "inrule:sf:api:consumerSecret": "[parameters('sfConsumerSecret')]",
      "inrule:sf:ruleService:basicUserName": "[parameters('executionServiceBasicUsername')]",
      "inrule:sf:ruleService:basicPwd": "[parameters('executionServiceBasicPassword')]"
    },
    "saasAppSettings": {
      "inrule:api:appconfigurationservice": "[parameters('appConfigurationServiceConnectionString')]",
      "inrule:api:appconfigurationservice:label": "[parameters('appConfigurationServiceLabel')]"
    }
  },
    "functions": [
    {
      "namespace": "inrule",
      "members": {
        "complexAppSettings": {
          "parameters": [
            {
              "name": "appInsightsConnectionString",
              "type": "string"
            }
          ],
          "output": {
            "type": "object",
            "value": {
              "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]"
            }
          }
        }
      }
    }
  ],
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "pid-33e2dfaf-aab8-4fa0-94fb-3e0b7f491cbd",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[or(empty(parameters('appInsightsInstrumentationKey')), parameters('createOrUpdateAppInsightsResource'))]",
      "name": "[variables('appInsightsResourceName')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "location": "[variables('appInsightsLocation')]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('appInsightsResourceName'))]": "Resource"
      },
      "properties": {
      }
    },
    {
      "condition": "[parameters('createOrUpdateAppServicePlan')]",
      "name": "AppServicePlanTemplate",
      "apiVersion": "2021-04-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('servicePlanResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('appServicePlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "location": "[parameters('location')]",
              "properties": {
                "name": "[variables('appServicePlanName')]"
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName')))]": "Resource"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": "[or(equals(if(parameters('createOrUpdateAppServicePlan'), parameters('appServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName')), '2021-02-01', 'Full').sku.name), 'F1'), equals(if(parameters('createOrUpdateAppServicePlan'), parameters('appServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName')), '2021-02-01', 'Full').sku.name), 'D1'))]"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('packageURI')]"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/extensions', parameters('appServiceName'), 'MSDeploy')]",
            "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
          ],
          "properties": "[union(if(not(empty(parameters('appConfigurationServiceConnectionString'))), union(variables('baseAppSettings'), variables('saasAppSettings')), union(variables('baseAppSettings'), variables('selfDeployAppSettings'))), inrule.complexAppSettings(if(or(empty(parameters('appInsightsInstrumentationKey')), parameters('createOrUpdateAppInsightsResource')), reference(resourceId('Microsoft.Insights/components', variables('appInsightsResourceName')), '2020-02-02').ConnectionString, parameters('appInsightsConnectionString'))))]"
        }
      ]
    }
  ],
  "outputs": {
    "appServicePublishingCredentials": {
      "type": "object",
      "value": "[list(resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'publishingcredentials'), '2020-12-01')]"
    },
    "salesforceRuleExecutionServiceURL": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2020-12-01').defaultHostName)]"
    }
  }
}
