{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service to deploy that the Rule Execution Service will be installed on"
      }
    },
    "sfLoginUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Login URL for the Salesforce instance used with the integration framework, ex: 'https://login.salesforce.com/services/oauth2/token'"
      }
    },
    "sfUsername": {
      "type": "string",
      "metadata": {
        "description": "Login username to connect to your Salesforce Account"
      }
    },
    "sfPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Login password to connect to your Salesforce Account"
      }
    },
    "sfSecurityToken": {
      "type": "securestring",
      "metadata": {
        "description": "API token for the Salesforce service account"
      }
    },
    "sfConsumerKey": {
      "type": "string",
      "metadata": {
        "description": "OAuth consumer key for the connected app"
      }
    },
    "sfConsumerSecret": {
      "type": "securestring",
      "metadata": {
        "description": "OAuth consumer secret for the connected app"
      }
    },
    "catalogUri": {
      "type": "string",
      "metadata": {
        "description": "URI for your InRule Rule Catalog service, should follow this format: https://{Context}/Service.svc, with {Context} being replaced with the base catalog service URI."
      }
    },
    "catalogUser": {
      "type": "string",
      "metadata": {
        "description": "Login username to connect to your InRule Rule Catalog"
      }
    },
    "catalogPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Login password to connect to your InRule Rule Catalog"
      }
    },
    "executionServiceBasicUsername": {
      "type": "string",
      "metadata": {
        "description": "Username used to secure the rule service. This same username will need to be provided to Salesforce during configuration"
      }
    },
    "executionServiceBasicPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password used to secure the rule service. This same password will need to be provided to Salesforce during configuration"
      }
    },
    "createOrUpdateAppServicePlan": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to false, provide the name and resource group of an existing service plan in the 'appServicePlanName' and 'servicePlanResourceGroupName' parameters. Otherwise a new plan will be created with the supplied name"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('appServiceName'),'Plan')]",
      "metadata": {
        "description": "Defines the App Service Plan's name, defaulting to the value of the App Service's name with 'Plan' appended to the end"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "servicePlanResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Optional name of the resource group for the existing app service plan. If creating a new plan, leave as the default value"
      }
    },
    "inRuleVersion": {
      "type": "string",
      "defaultValue": "5.6.0",
      "metadata": {
        "description": "Defines what version of the InRule Execution Service to deploy"
      }
    },
    "createOrUpdateAppInsightsResource": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to true, provide a value for the appInsightsResourceName parameter. If set to false, you can provide a value for the appInsightsIntrumentationKey to associate your App Service with an existing App Insights resource"
      }
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "defaultValue": "AppInsightsInstrumentationKey",
      "metadata": {
        "description": "If createOrUpdateAppInsightsResource is set to false and you have an existing App Insights resource you'd like to use instead, provide the Instrumentation key here. If createOrUpdateAppInsightsResource is set to true, leave this blank and provide a value for 'appInsightsResourceName' instead"
      }
    },
    "appInsightsResourceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('appServiceName'),'AppInsights')]",
      "metadata": {
        "description": "If createOrUpdateAppInsightsResource is set to true, define the name of the Application Insights resource to deploy here. If createOrUpdateAppInsightsResource is set to false, leave this field blank"
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Defines what Azure region to deploy the Application Insights resource to. Check details at https://azure.microsoft.com/en-us/global-infrastructure/services/?products=monitor"
      }
    },
    "packageUri": {
      "type": "string",
      "defaultValue": "[concat('https://github.com/InRule/AzureAppServices/releases/download/v', parameters('inRuleVersion'),'/InRule.Salesforce.WebService.zip')]",
      "metadata": {
        "description": "Download URI for the Execution Service package. Calculated from the inRuleVersion parameter."
      }
    }
  },
  "variables": {
    "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(parameters('appServiceName'),'Plan'), parameters('appServicePlanName'))]",
    "appInsightsResourceName": "[if(empty(parameters('appInsightsResourceName')), concat(parameters('appServiceName'),'Insights'), parameters('appInsightsResourceName'))]"
  },
  "resources": [
    {
      "condition": "[parameters('createOrUpdateAppInsightsResource')]",
      "name": "[variables('appInsightsResourceName')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "location": "[parameters('appInsightsLocation')]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('appInsightsResourceName'))]": "Resource"
      },
      "properties": {
      }
    },
    {
      "condition": "[parameters('createOrUpdateAppServicePlan')]",
      "name": "AppServicePlanTemplate",
      "apiVersion": "2017-05-10",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('servicePlanResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('appServicePlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2016-09-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "name": "[variables('appServicePlanName')]"
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]"
              }
            }
          ]
        }
      }
    },
      {
        "name": "[parameters('appServiceName')]",
        "type": "Microsoft.Web/sites",
        "apiVersion": "2016-08-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
        ],
        "tags": {
          "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName')))]": "Resource"
        },
        "properties": {
          "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        },
        "resources": [
          {
            "name": "MSDeploy",
            "type": "extensions",
            "apiVersion": "2016-08-01",
            "dependsOn": [
              "[concat('Microsoft.Web/sites/', parameters('appServiceName'))]"
            ],
            "properties": {
              "packageUri": "[parameters('packageURI')]"
            }
          },
          {
            "name": "appsettings",
            "type": "config",
            "apiVersion": "2016-08-01",
            "dependsOn": [
              "[concat('Microsoft.Web/Sites/', parameters('appServiceName'), '/Extensions/MSDeploy')]",
              "[concat('Microsoft.Web/sites/', parameters('appServiceName'))]"
            ],
            "properties": {
              "inrule:sf:api:loginUrl": "[parameters('sfLoginUrl')]",
              "inrule:sf:api:username": "[parameters('sfUsername')]",
              "inrule:sf:api:password": "[parameters('sfPassword')]",
              "inrule:sf:api:securityToken": "[parameters('sfSecurityToken')]",
              "inrule:sf:api:consumerKey": "[parameters('sfConsumerKey')]",
              "inrule:sf:api:consumerSecret": "[parameters('sfConsumerSecret')]",
              "inrule:sf:catalog:label": "LIVE",
              "inrule:sf:catalog:user": "[parameters('catalogUser')]",
              "inrule:sf:catalog:password": "[parameters('catalogPassword')]",
              "inrule:sf:catalog:sso": "false",
              "inrule:sf:catalog:uri": "[parameters('catalogUri')]",
              "inrule:sf:catalog:ruleAppDirectory": "C:\\RuleApps",
              "inrule:sf:catalog:useInRuleCatalog": "true",
              "inrule:sf:ruleService:basicUserName": "[parameters('executionServiceBasicUsername')]",
              "inrule:sf:ruleService:basicPwd": "[parameters('executionServiceBasicPassword')]",
              "inrule:repository:licensing:licenseFolder": "D:\\home\\site\\wwwroot",
              "inrule:logging:level": "Warn",
              "inrule:logging:appInsights:instrumentationKey": "[if(empty(parameters('appInsightsResourceName')), parameters('appInsightsInstrumentationKey'), reference(resourceId('Microsoft.Insights/components', parameters('appInsightsResourceName')), '2015-05-01').InstrumentationKey)]"
            }
          }
        ]
      }
  ]
}
