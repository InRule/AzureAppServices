{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service to deploy that the Rule Execution Service will be installed on"
      }
    },
    "sfLoginUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Login URL for the Salesforce instance used with the integration framework, ex: 'https://login.salesforce.com/services/oauth2/token'"
      }
    },
    "sfUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Login username to connect to your Salesforce Account"
      }
    },
    "sfPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Login password to connect to your Salesforce Account"
      }
    },
    "sfSecurityToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "API token for the Salesforce service account"
      }
    },
    "sfConsumerKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OAuth consumer key for the connected app"
      }
    },
    "sfConsumerSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "OAuth consumer secret for the connected app"
      }
    },
    "catalogUri": {
      "type": "string",
      "metadata": {
        "description": "URI for your InRule Rule Catalog service, should follow this format: https://{Context}/Service.svc, with {Context} being replaced with the base catalog service URI."
      }
    },
    "catalogUser": {
      "type": "string",
      "metadata": {
        "description": "Login username to connect to your InRule Rule Catalog"
      }
    },
    "catalogPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Login password to connect to your InRule Rule Catalog"
      }
    },
    "ruleAppLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optionally supply a default label used by the execution service to identify the ruleapp version to run. It is recommended to use a label such as \"LIVE\" to denote a production-ready rule application"
      }
    },
    "executionServiceApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Api key used to secure the rule service. This same key will need to be provided to Salesforce during configuration"
      }
    },
    "createOrUpdateAppServicePlan": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to false, provide the name and resource group of an existing service plan in the 'appServicePlanName' and 'servicePlanResourceGroupName' parameters. Otherwise a new plan will be created with the supplied name"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('appServiceName'),'Plan')]",
      "metadata": {
        "description": "Defines the App Service Plan's name, defaulting to the value of the App Service's name with 'Plan' appended to the end"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "servicePlanResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Optional name of the resource group for the existing app service plan. If creating a new plan, leave as the default value"
      }
    },
    "inRuleVersion": {
      "type": "string",
      "defaultValue": "5.8.1",
      "metadata": {
        "description": "Defines what version of the InRule Execution Service to deploy"
      }
    },
    "appInsightsConnectionString": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional Application Insights connection string. The Salesforce integration will use this a log source if provided."
      }
    },
    "appConfigurationServiceConnectionString": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SaaS Only: Provide a connection string for a azure app configuration resource to pull app configuration settings from."
      }
    },
    "appConfigurationServiceLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SaaS Only: Provide a label for the group of app settings to pull from your azure app configuration resource"
      }
    },
    "packageUri": {
      "type": "string",
      "defaultValue": "[concat('https://github.com/InRule/AzureAppServices/releases/download/v', parameters('inRuleVersion'),'/InRule.Salesforce.WebService.zip')]",
      "metadata": {
        "description": "Download URI for the Execution Service package. Calculated from the inRuleVersion parameter."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional for resources. By default the location of the resource group will be used"
      }
    }
  },
  "variables": {
    "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(parameters('appServiceName'),'Plan'), parameters('appServicePlanName'))]",
    "baseAppSettings": {
      "inrule:sf:catalog:label": "[parameters('ruleAppLabel')]",
      "inrule:sf:catalog:user": "[parameters('catalogUser')]",
      "inrule:sf:catalog:password": "[parameters('catalogPassword')]",
      "inrule:sf:catalog:sso": "false",
      "inrule:sf:catalog:uri": "[parameters('catalogUri')]",
      "inrule:sf:catalog:ruleAppDirectory": "C:\\RuleApps",
      "inrule:sf:catalog:useInRuleCatalog": "true",
      "inrule:repository:licensing:licenseFolder": "D:\\home\\site\\wwwroot",
      "inrule:logging:level": "Info"
    },
    "selfDeployAppSettings": {
      "inrule:sf:api:loginUrl": "[parameters('sfLoginUrl')]",
      "inrule:sf:api:username": "[parameters('sfUsername')]",
      "inrule:sf:api:password": "[parameters('sfPassword')]",
      "inrule:sf:api:securityToken": "[parameters('sfSecurityToken')]",
      "inrule:sf:api:consumerKey": "[parameters('sfConsumerKey')]",
      "inrule:sf:api:consumerSecret": "[parameters('sfConsumerSecret')]",
      "inrule:sf:ruleService:apiKey": "[parameters('executionServiceApiKey')]",
      "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]"
    },
    "saasAppSettings": {
      "inrule:api:appconfigurationservice": "[parameters('appConfigurationServiceConnectionString')]",
      "inrule:api:appconfigurationservice:label": "[parameters('appConfigurationServiceLabel')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "pid-33e2dfaf-aab8-4fa0-94fb-3e0b7f491cbd",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[parameters('createOrUpdateAppServicePlan')]",
      "name": "AppServicePlanTemplate",
      "apiVersion": "2021-04-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('servicePlanResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('appServicePlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "location": "[parameters('location')]",
              "properties": {
                "name": "[variables('appServicePlanName')]"
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName')))]": "Resource"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": "[or(equals(if(parameters('createOrUpdateAppServicePlan'), parameters('appServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName')), '2021-02-01', 'Full').sku.name), 'F1'), equals(if(parameters('createOrUpdateAppServicePlan'), parameters('appServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('appServicePlanName')), '2021-02-01', 'Full').sku.name), 'D1'))]"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('packageURI')]"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/extensions', parameters('appServiceName'), 'MSDeploy')]",
            "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
          ],
          "properties": "[if(not(empty(parameters('appConfigurationServiceConnectionString'))), union(variables('baseAppSettings'), variables('saasAppSettings')), union(variables('baseAppSettings'), variables('selfDeployAppSettings'))))]"
        }
      ]
    }
  ],
  "outputs": {
    "appServicePublishingCredentials": {
      "type": "object",
      "value": "[list(resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'publishingcredentials'), '2020-12-01')]"
    },
    "salesforceRuleExecutionServiceURL": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2020-12-01').defaultHostName)]"
    }
  }
}
