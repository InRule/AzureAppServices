{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "catalogServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service resource the catalog will be installed on"
      }
    },
    "catalogManagerServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service resource the catalog manager will be installed on"
      }
    },
    "createOrUpdateCatalogServicePlan": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to false, provide the name and resource group of an existing service plan in the 'catalogServicePlanName' and 'servicePlanResourceGroupName' parameters. Otherwise a new plan will be created with the supplied name"
      }
    },
    "catalogServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('catalogServiceName'),'Plan')]",
      "metadata": {
        "description": "Name for the App Service Plan, defaulting to the value of the App Service's name with 'Plan' appended to the end"
      }
    },
    "catalogServicePlanSkuName": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "servicePlanResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Optional name of the resource group for the existing app service plan. If creating a new plan, leave as the default value"
      }
    },
    "catalogSqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The server name for the Azure SQL server used to host the irCatalog database(s)."
      }
    },
    "catalogSqlServerUsername": {
      "type": "string",
      "defaultValue": "irCatalogAdmin",
      "metadata": {
        "description": "The server admin username for the Azure SQL server used to host the irCatalog database(s)."
      }
    },
    "catalogSqlDbName": {
      "type": "string",
      "metadata": {
        "description": "The name for the irCatalog database."
      }
    },
    "catalogSqlDbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [ "Basic", "Standard", "Premium" ],
      "metadata": {
        "description": "The Azure SQL database edition used for the irCatalog database. Use Basic for less demanding workloads, Standard for most production workloads, and Premium for IO-intensive workloads."
      }
    },
    "catalogSqlDbPerformanceLevel": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [ "Basic", "S0", "S1", "S2", "S3", "S4", "S6", "S7", "S9", "S12", "P1", "P2", "P4", "P6", "P11", "P15" ],
      "metadata": {
        "description": "The Azure SQL database performance level for the irCatalog. These correspond to the specific Azure SQL database edition."
      }
    },
    "catalogSqlServerPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The server admin password for the Azure SQL server used to host the irCatalog database(s)."
      }
    },
    "inRuleVersion": {
      "type": "string",
      "defaultValue": "5.8.1",
      "metadata": {
        "description": "Version of the catalog to deploy"
      }
    },
    "packageUri": {
      "type": "string",
      "defaultValue": "[concat('https://github.com/InRule/AzureAppServices/releases/download/v', parameters('inRuleVersion'),'/InRule.Catalog.Service.zip')]",
      "metadata": {
        "description": "Download URI for the catalog service package, default to calculated from the inRuleVersion parameter. Leave as default unless deploying a custom package"
      }
    },
    "managerPackageUri": {
      "type": "string",
      "defaultValue": "[concat('https://github.com/InRule/AzureAppServices/releases/download/v', parameters('inRuleVersion'),'/InRule.Catalog.Manager.Web.zip')]",
      "metadata": {
        "description": "Download URI for the catalog manager package, default to calculated from the inRuleVersion parameter. Leave as default unless deploying a custom package"
      }
    },
    "deployInitialDb": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "This will deploy an initial catalog database. We strongly suggest changing the default credentials after the database is created to prevent a security risk. If you are using this script in an upgrade scenario and the SQL DB already exists, this must be set to false, otherwise the deployment will fail."
      }
    },
    "catalogBacpacUri": {
      "type": "string",
      "defaultValue": "[concat('https://inruleintegrations.blob.core.windows.net/catalog/', parameters('inRuleVersion'),'/InRule.Catalog.Service.Database.bacpac')]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional for resources. By default the location of the resource group will be used"
      }
    },
    "enableOidc": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable OIDC authentication for Catalog Manager. If enabled, provide oidcBaseUri, oidcClientId, and oidcConfigServiceBase parameters"
      }
    },
    "oidcBaseUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Base URI for OIDC provider (e.g., Auth0 tenant URL). Only used if enableOidc is true"
      }
    },
    "oidcClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Client ID for OIDC authentication. Only used if enableOidc is true"
      }
    },
    "oidcConfigServiceBase": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Config service base URL for OIDC. Only used if enableOidc is true"
      }
    },
    "enableAuth0ForCatalogService": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Auth0 authentication for Catalog Service. If enabled, must also set AuthenticationType to Custom and provide Auth0 parameters"
      }
    },
    "catalogServiceAuthenticationType": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Windows",
        "Custom"
      ],
      "metadata": {
        "description": "Authentication type for Catalog Service. Use 'Custom' for Auth0/OIDC integration"
      }
    },
    "auth0ValidAudiences": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Valid audiences for Auth0 JWT validation. Only used if enableAuth0ForCatalogService is true"
      }
    },
    "auth0ValidIssuer": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Valid issuer for Auth0 JWT validation. Only used if enableAuth0ForCatalogService is true"
      }
    },
    "auth0DiscoveryUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Auth0 discovery URL for OIDC. Only used if enableAuth0ForCatalogService is true"
      }
    }
  },
  "variables": {
    "catalogServicePlanName": "[if(empty(parameters('catalogServicePlanName')), concat(parameters('catalogServiceName'),'Plan'), parameters('catalogServicePlanName'))]"
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "pid-50659428-9551-4c59-b7a5-79bf3402de4f",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[parameters('createOrUpdateCatalogServicePlan')]",
      "name": "AppServicePlanTemplate",
      "apiVersion": "2021-04-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('servicePlanResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('catalogServicePlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "location": "[parameters('location')]",
              "properties": {
                "name": "[variables('catalogServicePlanName')]"
              },
              "sku": {
                "name": "[parameters('catalogServicePlanSkuName')]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('catalogServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName')))]": "Resource"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": "[or(equals(if(parameters('createOrUpdateCatalogServicePlan'), parameters('catalogServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName')), '2021-02-01', 'Full').sku.name), 'F1'), equals(if(parameters('createOrUpdateCatalogServicePlan'), parameters('catalogServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName')), '2021-02-01', 'Full').sku.name), 'D1'))]"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('catalogServiceName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('packageUri')]"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/extensions', parameters('catalogServiceName'), 'MSDeploy')]",
            "[resourceId('Microsoft.Web/sites', parameters('catalogServiceName'))]"
          ],
          "properties": {
            "CatalogService__SqlServerConnectionString": "[concat('Server=tcp:', reference(resourceId('Microsoft.Sql/servers', parameters('catalogSqlServerName'))).fullyQualifiedDomainName, ',1433;Database=', parameters('catalogSqlDbName'), ';User Id=', parameters('catalogSqlServerUsername'), ';Password=', parameters('catalogSqlServerPassword'), ';')]",
            "CatalogService__Hostname": "[concat(parameters('catalogServiceName'), '.azurewebsites.net')]",
            "CatalogService__CommandTimeout": "180",
            "CatalogService__AuthenticationType": "[parameters('catalogServiceAuthenticationType')]",
            "CatalogService__CustomAuthenticationProviderTypeName": "[if(parameters('enableAuth0ForCatalogService'), 'InRule.Repository.Service.Providers.SqlServerWithOpenIdConnectAuthenticationProvider, InRule.Catalog.Service', '')]",
            "CatalogService__LockAcquisitionTimeoutInSeconds": "20",
            "CatalogService__EnableRepositoryServiceAggrStats": "false",
            "CatalogService__MaxItemsInObjectGraph": "2147483647",
            "CatalogService__Wcf__MaxItemsInObjectGraph": "2147483647",
            "CatalogService__Wcf__MaxReceivedMessageSize": "2147483647",
            "CatalogService__Wcf__MaxStringContentLength": "2147483647",
            "CatalogService__Kestrel__MaxRequestBodySize": "2147483647",
            "CatalogService__Auth0__ValidAudiences": "[if(parameters('enableAuth0ForCatalogService'), parameters('auth0ValidAudiences'), '')]",
            "CatalogService__Auth0__ValidIssuer": "[if(parameters('enableAuth0ForCatalogService'), parameters('auth0ValidIssuer'), '')]",
            "CatalogService__Auth0__DiscoveryUrl": "[if(parameters('enableAuth0ForCatalogService'), parameters('auth0DiscoveryUrl'), '')]",
            "CatalogService__Auth0__RequireHttps": "true",
            "InRuleLoggingOptions__Level": "Warn",
            "Serilog__MinimumLevel": "Information",
            "Serilog__WriteTo__0__Name": "Console"
          }
        }
      ]
    },
    {
      "name": "[parameters('catalogManagerServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', parameters('catalogServicePlanName')))]": "Resource"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": "[or(equals(if(parameters('createOrUpdateCatalogServicePlan'), parameters('catalogServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName')), '2021-02-01', 'Full').sku.name), 'F1'), equals(if(parameters('createOrUpdateCatalogServicePlan'), parameters('catalogServicePlanSkuName'), reference(resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('catalogServicePlanName')), '2021-02-01', 'Full').sku.name), 'D1'))]"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('catalogManagerServiceName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('managerPackageUri')]"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/extensions', parameters('catalogManagerServiceName'), 'MSDeploy')]",
            "[resourceId('Microsoft.Web/sites', parameters('catalogManagerServiceName'))]"
          ],
          "properties": {
            "InRule__Catalog__Uri": "[concat('https://', parameters('catalogServiceName') ,'.azurewebsites.net/service.svc/core')]",
            "InRule__Catalog__SingleSignOnEnabled": "[if(parameters('enableOidc'), 'true', 'false')]",
            "InRule__Catalog__AuthCookieExpire": "08:00:00",
            "InRule__Catalog__Oidc__Enabled": "[if(parameters('enableOidc'), 'true', 'false')]",
            "InRule__Catalog__Oidc__BaseUri": "[parameters('oidcBaseUri')]",
            "InRule__Catalog__Oidc__ClientId": "[parameters('oidcClientId')]",
            "InRule__Catalog__Oidc__Audience": "master_service",
            "InRule__Catalog__Oidc__ConfigServiceBase": "[parameters('oidcConfigServiceBase')]",
            "InRule__Catalog__Oidc__TokenRefreshThresholdTimeSpan": "00:10:00",
            "InRule__Catalog__Oidc__LicenseKey": "",
            "InRule__Catalog__Oidc__SelfHostedBaseUri": "[concat('https://', parameters('catalogManagerServiceName') ,'.azurewebsites.net/')]",
            "InRule__Catalog__AddUser__AdvancedSettings": "false",
            "InRule__Catalog__AddUser__ShowEmailNotification": "false",
            "InRule__Catalog__AddUser__PasswordComplexityEnabled": "false",
            "InRule__DigitalAdoptionUri": "",
            "Session__CookieName": "InRuleCatalogManagerSession",
            "Session__IdleTimeout": "00:30:00",
            "Serilog__MinimumLevel": "Information",
            "Serilog__WriteTo__0__Name": "Console",
            "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true"
          }
        }
      ]
    },
    {
      "name": "[parameters('catalogSqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('location')]",
      "apiVersion": "2021-05-01-preview",
      "properties": {
        "administratorLogin": "[parameters('catalogSqlServerUsername')]",
        "administratorLoginPassword": "[parameters('catalogSqlServerPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[parameters('location')]",
          "apiVersion": "2021-05-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('catalogSqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[parameters('catalogSqlDbName')]",
          "type": "databases",
          "location": "[parameters('location')]",
          "apiVersion": "2021-05-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('catalogSqlServerName'))]"
          ],
          "sku": {
            "tier": "[parameters('catalogSqlDbEdition')]",
            "name": "[parameters('catalogSqlDbPerformanceLevel')]"
          },
          "resources": [
            {
              "condition": "[parameters('deployInitialDb')]",
              "type": "extensions",
              "apiVersion": "2014-04-01",
              "name": "Import",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('catalogSqlServerName'), parameters('catalogSqlDbName'))]"
              ],
              "properties": {
                "storageKeyType": "SharedAccessKey",
                "storageKey": "?",
                "storageUri": "[parameters('catalogBacpacUri')]",
                "administratorLogin": "[parameters('catalogSqlServerUsername')]",
                "administratorLoginPassword": "[parameters('catalogSqlServerPassword')]",
                "operationMode": "Import"
              }
            }
          ]
        }
      ]
    }
  ],
  "outputs": {}
}
